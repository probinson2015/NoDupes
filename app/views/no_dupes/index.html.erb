<div class="col-md-8">
	<div class="jumbotron">
	  <h1>Hello!</h1>
	  <p>This site demonstrates a function that removes all duplicates from an unsorted list while leaving the remaining list in the original order. It should be able to handle say, 100,000 list items containing 50% randomly placed duplicates in well under 1 second on a typical modern laptop. This site only accepts .csv files at this time. You can download a sample .csv file <a href="no_dupes/download">here!</a></p>
	  
	  	<input id="input" type="file" accept=".csv">
	  	<button class="btn btn-default" id="run_button">Run</button>
	  	
	  	<script>
			$('#run_button').click(function()
			{
				var file = document.getElementById("input").files[0];
				var reader = new FileReader();
				reader.readAsText(file);
				reader.onload = loadHandler;
			});

			function loadHandler(event)
			{
				var csv = event.target.result;
				processData(csv);
			}

			function processData(csv) 
			{
				//save array created from csv items
				var working_list = createArrFromCSV(csv);
				//get start time for no dupe algorithm
				var start_time = Date.now();
        		//receive algorithm results and count of duplicates as array
        		var result = removeDuplicatesFromArray(working_list);
        		//get end time for no dupe algorithm
				var end_time = Date.now();
        		working_list = result[0];
        		var removed_count = result[1];

				saveResultsToCSV(working_list);

				putResultToHTML(removed_count, (end_time - start_time));
				 
	      	}

			function createArrFromCSV(csv)
			{
				var allItems = csv.split(/\r\n|\n/);
        		var working_list = [];
        		for (var i=0; i < allItems.length; i++) {
	            	var data = allItems[i].split(';');
                	working_list.push(data);
        		}

        		return working_list;
			}

			function removeDuplicatesFromArray(arr)
			{

				//no dupe algorithm
        		var num = arr.length;
				var no_dupes = {};
				var duplicate_count = 0;

				for (var i = 0; i < num; i++)
				{
				  	//check to see if the item is in the list
				    if (!no_dupes[arr[i]])
				    {
				      	//add item to list and set value to true
				        no_dupes[arr[i]] = true;
				        //add item to end of original array
				        arr.push(arr[i]);
				    }
				    else
				    {
				    	//increase counter if duplicate is found
				      	duplicate_count++;
				    }
				}
				//remove original items from array so it will only contain no_dupes
				arr.splice(0, num);
				return [arr, duplicate_count];
			}


			function saveResultsToCSV(arr)
			{
				//creating csv from array
				var csvContent = "data:text/csv;charset=utf-8,";

		  		arr.forEach(function(item, index)
		  		{
				   csvContent += (item + "\n");
				}); 

		  		var encodedUri = encodeURI(csvContent);
				var link = document.createElement("a");
				link.setAttribute("href", encodedUri);
				link.setAttribute("download", "no_dupes.csv");
				//automatically download "no_dupes.csv"
				link.click();
			}

			function putResultToHTML(removed_count, duration)
			{
				//put process time and number of duplicates to HTML
				$('#result').text(removed_count + " duplicate(s) found. The process took " +  duration + " milliseconds");
			}
		</script>


		<div id="result"></div>
	</div>
</div>